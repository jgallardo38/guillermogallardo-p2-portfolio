---
title: "R Coding Exercise"
---

# Loading and Checking Data

## Loading Libraries
```{r message=FALSE, warning=FALSE}
library(dslabs) #loading dslabs to access gapminder
library(dplyr) #loading to follow tidyverse
library(ggplot2) #loading to create plots
help("gapminder") #help file for gapminder data
```

## Gapminder Structure
```{r message=FALSE}
str(gapminder) #data structure
```

## Gapminder Summary
```{r gapminder summary}
summary(gapminder) #data summary
```

## Gapminder Class

```{r}
class(gapminder) #type of object
```

# Processing Data

## Filtering Data

In this code, I am using the pipe operator %>% to pass the original dataset and filter it by continent. This step provides us with the specific data required to proceed with this assignment.
```{r filtering}
africadata = gapminder %>% #using pipe to pass data to filter function
  filter(continent == "Africa")

```

## Africadata Structure

Reviewing the structure confirms that we have 2907 observations and 9 variables, which aligns with the professor's instructions.
```{r STR}
str(africadata)
```

## Africadata Summary

```{r Summary}
summary(africadata)
```

## Creating New Objects

**Infant Mortality and Life Expectancy Object**

The object I've created here is named *ad_mortality*. I'm utilizing the pipe operator to filter the data and select only the necessary variables which are *infant mortality* and *life expectancy*.
```{r ad_mortality Object}
ad_mortality = africadata %>% #Creating new object using the filtered data set from gapminder
  select(infant_mortality, life_expectancy) #selecting only the columns we need
```

**Population and Life Expectancy Object**

The object I've created here is named *ad_population*. I'm utilizing the pipe operator to filter the data and select only the necessary variables which are *population* and *life expectancy*.
```{r ad_population Object}
ad_population = africadata %>% 
  select(population, life_expectancy) 
```

## Data Structure of ad_mortality

```{r ad_mortality str}
str(ad_mortality)
```

## Summary of ad_mortality

```{r}
summary(ad_mortality)
```

## Data Structure of ad_population

```{r ad_population str}
str(ad_population)
```

## Summary of ad_population

```{r}
summary(ad_population)
```

# Plotting

## Infant Mortality vs Life Expectancy

In this plot, I used ggplot to create a scatterplot. The code is straightforward, utilizing the *ad_mortality* object to generate it.
```{r Life Expectancy vs Infant Mortality, warning=FALSE}
ggplot(ad_mortality, aes(x = infant_mortality, y = life_expectancy)) + 
  geom_point() + #to create scatterplot
  labs(title = "Relationship between Infant Mortality and Life Expectancy", x = "Infant Mortality", y = "Life Expectancy") +
  theme_bw() #selecting a theme
```

## Life Expectancy vs Population

In this plot, I used ggplot to create a scatterplot. The code is straightforward, utilizing the *ad_population* object to generate it.
```{r Life Expectancy vs Population, warning=FALSE}
ggplot(ad_population, aes(x = population, y = life_expectancy)) + 
  geom_point() +
  labs(title = "Relationship between Life Expectancy and Population", x = "Population", y = "Life Expectancy") +
  scale_x_log10() + #setting log scale
  theme_bw() #selecting a theme
```

## Observations 

**The plot shows unique groups of data with a positive correlation. These groups represent countries with multiple years of data, showing that as population increases, life expectancy also tends to increase**

# More Data Processing

## Finding NA's in Infant Mortality Variable by Year

To identify the years with the most missing values (NA), I utilized the *africadata* dataset. First, I grouped it by year and then calculated a new variable representing the count of NA values in the infant mortality column. This approach provides a clearer view of which years have missing data and which ones are complete.
```{r NA Finder in Infant Mortality}
na_finder = africadata %>% 
  group_by(year) %>% #grouping by year
  summarize(missing_im = sum(is.na(infant_mortality))) #creating a new variable that adds all the NA in infant mortality
```

## Creating New Object without NA's

Now that we have identified the years with complete data, we can create a new object, in this case called *africa2000*, representing the year 2000. The code filters the *africadata* dataset based on the year variable to achieve this.
```{r}
africa2000 = africadata %>% 
  filter(year == 2000) #filtering by year 2000 in the african data dataset
```

## New Object Summary

```{r africa2000 Summary}
summary(africa2000)
```

## New Object Data Structure

```{r africa200 Str}
str(africa2000)
```

# More Plotting

## Infant Mortality vs Life Expectancy

I am reusing the code from the initial scatterplots, replacing the dataset from *africadata* with *africa2000* to visualize the data specifically for the year 2000.
```{r africa2000 Infant Mortality}
ggplot(africa2000, aes(x = infant_mortality, y = life_expectancy)) + 
  geom_point() + #to create scatterplot
  labs(title = "Relationship between Infant Mortality and Life Expectancy", x = "Infant Mortality", y = "Life Expectancy") +
  theme_bw()
```

## Life Expectancy vs Population

I am reusing the code from the initial scatterplots, replacing the dataset from *africadata* with *africa2000* to visualize the data specifically for the year 2000.
```{r africa200 Population}
ggplot(africa2000, aes(x = population, y = life_expectancy)) + 
  geom_point() +
  labs(title = "Relationship between Life Expectancy and Population", x = "Population", y = "Life Expectancy") +
  scale_x_log10() + #setting log scale
  theme_bw()
```

# Simple Model Fit

## Linear Models

**Life Expectancy \~ Infant Mortality**

In the linear model below, *life_expectancy* is our outcome variable, while *infant_mortality* is our predictor. This model helps us identify if there is a linear relationship between these two variables.
```{r lm Infant Mortality}
lm1= lm(life_expectancy~infant_mortality, data = africa2000)

```

**Summary lm1**

```{r summary lm1}
summary(lm1)
```

## Conclusion

**After running the linear model, we can see a p-value of 2.826e-08, which is significantly smaller than our 0.05 signficance level. We can reject the null hypothesis, and this suggest a strong linear relationship between infant mortality and life expectancy. The R-squared suggest that 47.01% of the variability in life expectancy can be explained by infant mortality. For every unit increase in infant mortality, we expect to see a decrease of 0.18916 units in life expectancy.** 


**Life Expectancy \~ Population**

In the linear model below, *life_expectancy* is our outcome variable, while *population* is our predictor. This model helps us identify if there is a linear relationship between these two variables.
```{r lm Population}
lm2= lm(life_expectancy~population, data = africa2000)
```

**Summary**

```{r summary lm2}
summary(lm2)
```

## Conclusion

**After running the linear model, we can see the p-value of 0.6159 which is above our 0.05 significance level. We do not reject the null hypothesis, and this suggest there is not linear relationship between infant mortality and life expectancy.**

# This section contributed by Benjamin Farias

## Summary of dataset

```{r}
# Get an understanding of the structure of the data
str(mice_weights)
```
```{r}
# Get summary statistics
summary(mice_weights)
```

## Processing

```{r}
# Finding which generation had the most observations
mice_weights %>% count(gen)
```

```{r}
# Filtering for only the generation with the most observations (11)
mice_weights11 <- mice_weights %>% filter(gen==11)
```


## Exploratory figures

```{r}
# Plotting the weight against bone density.
plot(mice_weights11$bone_density, mice_weights11$body_weight)
```

```{r}
# Plotting the weight against the percent fat
plot(mice_weights11$percent_fat, mice_weights11$body_weight)
```

## Models

```{r}
# Creating a linear model for weight by bone density
m1 <- lm(body_weight ~ bone_density, data = mice_weights11)

# Creating a linear model for weight by percent fat
m2 <- lm(body_weight ~ percent_fat, data = mice_weights11)
```

```{r}
# Summary of the weight by bone density model
summary(m1)
```

```{r}
# Summary of the weight by percent fat model
summary(m2)
```

## Summary

Both models have a p-value below .05 meaning there are statistically significant linear relations between weight and both percent fat and bone density; however, the percent fat model has a higher r-squared meaning the model represents more of the data.